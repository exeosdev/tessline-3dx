
#pragma once

#ifndef __TS3_GPUAPI_COMMON_DEFS_H__
#define __TS3_GPUAPI_COMMON_DEFS_H__

namespace ts3::gpuapi
{

	ts3EnableCustomExceptionSupport();
	ts3EnableEnumTypeInfoSupport();

	using gpu_resource_id_t = uint64;

	template <typename TpClass>
	using Handle = SharedHandle<TpClass>;

	enum SystemMetrics : uint32
	{
		GPU_SYSTEM_METRIC_IA_MAX_VERTEX_ATTRIBUTES_NUM = 16,
		GPU_SYSTEM_METRIC_IA_MAX_VERTEX_INPUT_STREAMS_NUM = 16,
		GPU_SYSTEM_METRIC_RT_MAX_COLOR_ATTACHMENTS_NUM = 8,
		GPU_SYSTEM_METRIC_RT_MAX_COMBINED_ATTACHMENTS_NUM = 9,
		GPU_SYSTEM_METRIC_SHADER_COMBINED_STAGES_NUM = 6,
		GPU_SYSTEM_METRIC_SHADER_GRAPHICS_STAGES_NUM = 5,
		GPU_SYSTEM_METRIC_IS_MAX_CONSTANT_GROUP_SIZE = 32,
		GPU_SYSTEM_METRIC_IS_MAX_DESCRIPTOR_SET_SIZE = 16,
		GPU_SYSTEM_METRIC_IS_MAX_DESCRIPTOR_SETS_NUM = 4,
		GPU_SYSTEM_METRIC_IS_MAX_DWORD_SIZE = 64,
		GPU_SYSTEM_METRIC_TEXTURE_MAX_MIP_LEVELS_NUM = 16
	};

	enum GPUDriverConfigFlags : uint32
	{
		GPU_DRIVER_CONFIG_FLAG_ENABLE_DEBUG_LAYER_BIT           = 0x0001,
		GPU_DRIVER_CONFIG_FLAG_ENABLE_SHADER_DEBUG_INFO_BIT     = 0x0002 | GPU_DRIVER_CONFIG_FLAG_ENABLE_DEBUG_LAYER_BIT,
		GPU_DRIVER_CONFIG_FLAG_DISABLE_MULTI_THREAD_ACCESS_BIT  = 0x0010,
		GPU_DRIVER_CONFIG_FLAG_FORCE_COMPATIBILITY_BIT          = 0x0100,
		GPU_DRIVER_CONFIG_FLAG_FORCE_CORE_PROFILE_BIT           = 0x0200,
		GPU_DRIVER_CONFIG_FLAG_USE_REFERENCE_DRIVER_BIT         = 0x8000,
		GPU_DRIVER_CONFIG_FLAGS_DEFAULT                         = 0
	};

} // namespace ts3::gpuapi

#endif // __TS3_GPUAPI_COMMON_DEFS_H__
